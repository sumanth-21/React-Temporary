{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\saisumanth.p\\\\Desktop\\\\React-Project-With-Hooks\\\\01-starting-project\\\\src\\\\components\\\\Meals\\\\AvailableMeals.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport Card from '../UI/Card';\nimport MealItem from './MealItem/MealItem';\nimport classes from './AvailableMeals.module.css';\nimport Spinner from '../UI/Spinner/Spinner';\nimport CategoryFilterList from '../Meals/CategoryFilterList/CategoryFilterList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AvailableMeals = () => {\n  _s();\n\n  const [meals, setMeals] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [httpError, setHttpError] = useState();\n  useEffect(() => {\n    const fetchMeals = async () => {\n      const response = await fetch('https://react-project-with-hooks-default-rtdb.firebaseio.com/meals.json');\n\n      if (!response.ok) {\n        throw new Error('Something went wrong!');\n      }\n\n      const responseData = await response.json();\n      const loadedMeals = [];\n\n      for (const key in responseData) {\n        loadedMeals.push(responseData[key]);\n      }\n\n      setMeals(loadedMeals);\n      setIsLoading(false);\n    };\n\n    fetchMeals().catch(error => {\n      setIsLoading(false);\n      setHttpError(error.message);\n    });\n  }, []);\n\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this);\n  }\n\n  if (httpError) {\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      className: classes.MealsError,\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: httpError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this);\n  }\n\n  const categorylist = [];\n  meals.forEach(product => {\n    if (!categorylist.includes(product.category)) {\n      categorylist.push(product.category);\n    }\n  });\n  const [filter, setFilter] = useState([]);\n\n  const checkBoxHandler = event => {\n    let category = event.target.value;\n\n    if (event.target.checked) {\n      if (!filter.includes(category)) {\n        setFilter(arr => [...arr, category]);\n      }\n    } else {\n      if (filter.includes(category)) {\n        setFilter(filter.filter(item => item !== category));\n      }\n    }\n  };\n\n  const mealsList = meals.map(meal => /*#__PURE__*/_jsxDEV(MealItem, {\n    id: meal.id,\n    name: meal.name,\n    category: meal.category,\n    vendor: meal.vendor,\n    price: meal.price\n  }, meal.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: classes.meals,\n    children: [/*#__PURE__*/_jsxDEV(Card, {\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: mealsList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      children: /*#__PURE__*/_jsxDEV(CategoryFilterList, {\n        categoryList: myCategoryArr,\n        checked: checkBoxHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AvailableMeals, \"Cuh2WHIA1VJQxFqWqj+HE1L1y/g=\");\n\n_c = AvailableMeals;\nexport default AvailableMeals;\n\nvar _c;\n\n$RefreshReg$(_c, \"AvailableMeals\");","map":{"version":3,"sources":["C:/Users/saisumanth.p/Desktop/React-Project-With-Hooks/01-starting-project/src/components/Meals/AvailableMeals.js"],"names":["useState","useEffect","Card","MealItem","classes","Spinner","CategoryFilterList","AvailableMeals","meals","setMeals","isLoading","setIsLoading","httpError","setHttpError","fetchMeals","response","fetch","ok","Error","responseData","json","loadedMeals","key","push","catch","error","message","MealsError","categorylist","forEach","product","includes","category","filter","setFilter","checkBoxHandler","event","target","value","checked","arr","item","mealsList","map","meal","id","name","vendor","price","myCategoryArr"],"mappings":"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","sourcesContent":["import { useState, useEffect } from 'react';\n\nimport Card from '../UI/Card';\nimport MealItem from './MealItem/MealItem';\nimport classes from './AvailableMeals.module.css';\nimport Spinner from '../UI/Spinner/Spinner';\nimport CategoryFilterList from '../Meals/CategoryFilterList/CategoryFilterList';\n\n\n\nconst AvailableMeals = () => {\n  const [meals, setMeals] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [httpError, setHttpError] = useState();\n\n  useEffect(() => {\n    const fetchMeals = async () => {\n      const response = await fetch(\n        'https://react-project-with-hooks-default-rtdb.firebaseio.com/meals.json'\n      );\n\n      if (!response.ok) {\n        throw new Error('Something went wrong!');\n      }\n\n      const responseData = await response.json();\n\n      const loadedMeals = [];\n\n      for (const key in responseData) {\n        loadedMeals.push(responseData[key]);\n      }\n\n      setMeals(loadedMeals);\n      setIsLoading(false);\n    };\n\n    fetchMeals().catch((error) => {\n      setIsLoading(false);\n      setHttpError(error.message);\n    });\n  }, []);\n\n  if (isLoading) {\n    return (\n      <Spinner />\n    );\n  }\n\n  if (httpError) {\n    return (\n      <section className={classes.MealsError}>\n        <p>{httpError}</p>\n      </section>\n    );\n  }\n\n  const categorylist = [];\n  meals.forEach( product => {\n    if(!categorylist.includes(product.category)) {\n      categorylist.push(product.category);\n    }\n  }\n  );\n\n  const [filter, setFilter] = useState([]);\n  \n  const checkBoxHandler = (event) => {\n      let category = event.target.value;\n      if(event.target.checked) {\n          if(!filter.includes(category)) {\n              setFilter( arr => [...arr, category])\n          }\n      }\n      else {\n          if(filter.includes(category)) {\n              setFilter( filter.filter(item => item !== category))\n          }\n      }\n  };\n\n  const mealsList = meals.map((meal) => (\n    <MealItem\n      key={meal.id}\n      id={meal.id}\n      name={meal.name}\n      category={meal.category}\n      vendor={meal.vendor}\n      price={meal.price}\n    />\n  ));\n\n  return (\n    <section className={classes.meals}>\n      <Card>\n        <ul>{mealsList}</ul>\n      </Card>\n      <Card>\n        <CategoryFilterList\n            categoryList ={myCategoryArr}\n            checked= {checkBoxHandler}\n            />\n      </Card>\n    </section>\n  );\n};\n\nexport default AvailableMeals;\n"]},"metadata":{},"sourceType":"module"}