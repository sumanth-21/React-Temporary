{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst initialCartState = {\n  items: [],\n  totalAmount: 0\n};\nconst cartSlice = createSlice({\n  name: 'cart',\n  initialState: initialCartState,\n  reducers: {\n    addItem(state, action) {\n      state.totalAmount += action.payload.price * action.payload.amount;\n      console.log(state);\n      const existingCartItemIndex = state.items.findIndex(item => item.id === action.payload.id);\n      const existingCartItem = state.items[existingCartItemIndex];\n\n      if (existingCartItem) {\n        existingCartItem.amount += action.payload.amount;\n      } else {\n        state.items.push(action.payload);\n      }\n    },\n\n    removeItem(state) {\n      const existingCartItemIndex = state.items.findIndex(item => item.id === action.id);\n      const existingItem = state.items[existingCartItemIndex];\n      state.totalAmount -= existingItem.price;\n      let updatedItems;\n\n      if (existingItem.amount === 1) {\n        state.items.splice(existingCartItemIndex, 1);\n      } else {\n        existingItem.amount--;\n      }\n    }\n\n  }\n});\nexport const cartActions = cartSlice.actions;\nexport default cartSlice.reducer;","map":{"version":3,"sources":["C:/Users/saisumanth.p/Desktop/React-Project-With-Hooks/01-starting-project/src/store/Cart.js"],"names":["createSlice","initialCartState","items","totalAmount","cartSlice","name","initialState","reducers","addItem","state","action","payload","price","amount","console","log","existingCartItemIndex","findIndex","item","id","existingCartItem","push","removeItem","existingItem","updatedItems","splice","cartActions","actions","reducer"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AAEA,MAAMC,gBAAgB,GAAG;AACrBC,EAAAA,KAAK,EAAC,EADe;AAErBC,EAAAA,WAAW,EAAE;AAFQ,CAAzB;AAKA,MAAMC,SAAS,GAAGJ,WAAW,CAAC;AAC1BK,EAAAA,IAAI,EAAE,MADoB;AAE1BC,EAAAA,YAAY,EAAEL,gBAFY;AAG1BM,EAAAA,QAAQ,EAAE;AACNC,IAAAA,OAAO,CAACC,KAAD,EAAQC,MAAR,EAAgB;AACnBD,MAAAA,KAAK,CAACN,WAAN,IAAqBO,MAAM,CAACC,OAAP,CAAeC,KAAf,GAAuBF,MAAM,CAACC,OAAP,CAAeE,MAA3D;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYN,KAAZ;AAEA,YAAMO,qBAAqB,GAAGP,KAAK,CAACP,KAAN,CAAYe,SAAZ,CAC3BC,IAAD,IAAUA,IAAI,CAACC,EAAL,KAAYT,MAAM,CAACC,OAAP,CAAeQ,EADT,CAA9B;AAGA,YAAMC,gBAAgB,GAAGX,KAAK,CAACP,KAAN,CAAYc,qBAAZ,CAAzB;;AAEA,UAAII,gBAAJ,EAAsB;AAClBA,QAAAA,gBAAgB,CAACP,MAAjB,IAA2BH,MAAM,CAACC,OAAP,CAAeE,MAA1C;AACH,OAFD,MAEO;AACHJ,QAAAA,KAAK,CAACP,KAAN,CAAYmB,IAAZ,CAAiBX,MAAM,CAACC,OAAxB;AACH;AACJ,KAfK;;AAgBNW,IAAAA,UAAU,CAACb,KAAD,EAAQ;AACd,YAAMO,qBAAqB,GAAGP,KAAK,CAACP,KAAN,CAAYe,SAAZ,CACzBC,IAAD,IAAUA,IAAI,CAACC,EAAL,KAAYT,MAAM,CAACS,EADH,CAA9B;AAGE,YAAMI,YAAY,GAAGd,KAAK,CAACP,KAAN,CAAYc,qBAAZ,CAArB;AACAP,MAAAA,KAAK,CAACN,WAAN,IAAqBoB,YAAY,CAACX,KAAlC;AACA,UAAIY,YAAJ;;AACA,UAAID,YAAY,CAACV,MAAb,KAAwB,CAA5B,EAA+B;AAC7BJ,QAAAA,KAAK,CAACP,KAAN,CAAYuB,MAAZ,CAAmBT,qBAAnB,EAA0C,CAA1C;AACD,OAFD,MAEO;AACLO,QAAAA,YAAY,CAACV,MAAb;AACD;AACN;;AA5BK;AAHgB,CAAD,CAA7B;AAmCA,OAAO,MAAMa,WAAW,GAAGtB,SAAS,CAACuB,OAA9B;AAEP,eAAevB,SAAS,CAACwB,OAAzB","sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\r\n\r\nconst initialCartState = { \r\n    items:[], \r\n    totalAmount: 0 \r\n};\r\n\r\nconst cartSlice = createSlice({\r\n    name: 'cart',\r\n    initialState: initialCartState,\r\n    reducers: {\r\n        addItem(state, action) {\r\n            state.totalAmount += action.payload.price * action.payload.amount;\r\n            console.log(state);\r\n        \r\n            const existingCartItemIndex = state.items.findIndex(\r\n              (item) => item.id === action.payload.id\r\n            );\r\n            const existingCartItem = state.items[existingCartItemIndex];\r\n        \r\n            if (existingCartItem) {\r\n                existingCartItem.amount += action.payload.amount;\r\n            } else {\r\n                state.items.push(action.payload);\r\n            }\r\n        },\r\n        removeItem(state) {\r\n            const existingCartItemIndex = state.items.findIndex(\r\n                (item) => item.id === action.id\r\n              );\r\n              const existingItem = state.items[existingCartItemIndex];\r\n              state.totalAmount -= existingItem.price;\r\n              let updatedItems;\r\n              if (existingItem.amount === 1) {\r\n                state.items.splice(existingCartItemIndex, 1);\r\n              } else {\r\n                existingItem.amount--;\r\n              }\r\n        }\r\n    }\r\n});\r\n\r\nexport const cartActions = cartSlice.actions;\r\n\r\nexport default cartSlice.reducer;"]},"metadata":{},"sourceType":"module"}